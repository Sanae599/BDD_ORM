"""Initial tables

Revision ID: b3036193e9fd
Revises: 
Create Date: 2025-06-12 01:25:54.667445

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b3036193e9fd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('firstname', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('id_admin', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('LEARNER', 'TRAINER', 'ADMIN', 'STAFF', name='role'), nullable=True),
    sa.Column('date_promotion', sa.Date(), nullable=False),
    sa.Column('level_access', sa.Enum('ADMIN_STANDARD', 'SUPERADMIN', name='niveauaccesenum'), nullable=False),
    sa.PrimaryKeyConstraint('id_admin')
    )
    op.create_table('learner',
    sa.Column('firstname', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('id_learner', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('LEARNER', 'TRAINER', 'ADMIN', 'STAFF', name='role'), nullable=True),
    sa.Column('date_birth', sa.Date(), nullable=False),
    sa.Column('study_level', sa.Enum('BAC', 'BAC2', 'BAC5', name='learnerlevelenum'), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('platform_registration_date', sa.DateTime(), nullable=False),
    sa.Column('certification_obtained', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id_learner')
    )
    op.create_table('room',
    sa.Column('id_room', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id_room'),
    sa.UniqueConstraint('name')
    )
    op.create_table('teachingstaff',
    sa.Column('firstname', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('id_staff', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('LEARNER', 'TRAINER', 'ADMIN', 'STAFF', name='role'), nullable=True),
    sa.Column('job', sa.Enum('ResponsablePedagogique', 'ChargeeProjet', name='jobstaffenum'), nullable=False),
    sa.Column('date_takingup_office', sa.Date(), nullable=False),
    sa.Column('responsabilities', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id_staff')
    )
    op.create_table('trainer',
    sa.Column('firstname', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('id_trainer', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('LEARNER', 'TRAINER', 'ADMIN', 'STAFF', name='role'), nullable=True),
    sa.Column('speciality', sa.String(), nullable=False),
    sa.Column('hire_date', sa.Date(), nullable=False),
    sa.Column('hourly_rate', sa.Float(), nullable=False),
    sa.Column('bio', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id_trainer')
    )
    op.create_table('course',
    sa.Column('id_course', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100)),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('id_room', sa.Integer(), nullable=True),
    sa.Column('id_trainer', sa.Integer(), nullable=True),
    sa.Column('max_capacity', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'ARCHIVED', name='coursestatutenum'), nullable=True),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['id_room'], ['room.id_room'], ),
    sa.ForeignKeyConstraint(['id_trainer'], ['trainer.id_trainer'], ),
    sa.PrimaryKeyConstraint('id_course')
    )
    op.create_table('equipment',
    sa.Column('id_equipment', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type_equipment', sa.Enum('AUDIOVISUAL', 'COMPUTER', 'FURNITURE', 'OTHER', name='equipmenttype'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('is_mobile', sa.Boolean(), nullable=False),
    sa.Column('id_room', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_room'], ['room.id_room'], ),
    sa.PrimaryKeyConstraint('id_equipment')
    )
    op.create_table('associate',
    sa.Column('id_course', sa.Integer(), nullable=False),
    sa.Column('id_equipment', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_course'], ['course.id_course'], ),
    sa.ForeignKeyConstraint(['id_equipment'], ['equipment.id_equipment'], ),
    sa.PrimaryKeyConstraint('id_course', 'id_equipment')
    )
    op.create_table('register',
    sa.Column('id_course', sa.Integer(), nullable=False),
    sa.Column('id_learner', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('registration_status', sa.Enum('ENREGISTRE', 'DESINSCRIT', 'EN_ATTENTE', name='registerstatutenum'), nullable=False),
    sa.Column('presence', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_course'], ['course.id_course'], ),
    sa.ForeignKeyConstraint(['id_learner'], ['learner.id_learner'], ),
    sa.PrimaryKeyConstraint('id_course', 'id_learner')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('register')
    op.drop_table('associate')
    op.drop_table('equipment')
    op.drop_table('course')
    op.drop_table('trainer')
    op.drop_table('teachingstaff')
    op.drop_table('room')
    op.drop_table('learner')
    op.drop_table('admin')
    # ### end Alembic commands ###
